/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -v -c NvsdDataIface -p nvsd_data_iface nvsd_data.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef NVSD_DATA_IFACE_H_1449674978
#define NVSD_DATA_IFACE_H_1449674978

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface sn.ornap.nvsd.NavSensor.Data
 */
class NvsdDataIface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "sn.ornap.nvsd.NavSensor.Data"; }

public:
    NvsdDataIface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~NvsdDataIface();

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void PositionFix(double lat, double lon, double alt, double v_lat, double v_lon, double v_alt, uint date, uint time, double rms2d, uchar status);
    void PositionPrecision(double hdop, double vdop, double pdop, double tdop, double fix_rms_lat, double fix_rms_lon, double fix_rms_alt, double v_rms_lat, double v_rms_lon, double v_rms_alt);
};

namespace sn {
  namespace ornap {
    namespace nvsd {
      namespace NavSensor {
        typedef ::NvsdDataIface Data;
      }
    }
  }
}
#endif
